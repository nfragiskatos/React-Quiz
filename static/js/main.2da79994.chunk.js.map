{"version":3,"sources":["context.js","SetupForm.js","Loading.js","Modal.js","App.js","index.js"],"names":["table","sports","history","politics","AppContext","React","createContext","AppProvider","children","useState","waiting","setWaiting","isLoading","setIsLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","isModalOpen","setIsModalOpen","amount","category","difficulty","quiz","setQuiz","nextQuestion","oldIndex","length","openModal","fetchQuestions","url","a","axios","catch","e","console","log","response","data","results","Provider","value","checkAnswer","oldState","closeModal","handleChange","name","target","handleSubmit","preventDefault","useGlobalContext","useContext","SetupForm","className","htmlFor","min","max","type","id","onChange","onClick","Loading","Modal","toFixed","App","question","incorrect_answers","correct_answer","answers","tempIndex","Math","floor","random","push","dangerouslySetInnerHTML","__html","map","answer","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2da79994.chunk.js","sourcesContent":["import axios from 'axios';\nimport React, { useState, useContext, useEffect } from 'react';\n\nconst table = {\n\tsports: 21,\n\thistory: 23,\n\tpolitics: 24\n};\n\nconst API_ENDPOINT = 'https://opentdb.com/api.php?';\n\nconst url = 'https://opentdb.com/api.php?amount=10&category=21&difficulty=easy&type=multiple';\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n\tconst [waiting, setWaiting] = useState(true);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [questions, setQuestions] = useState([]);\n\tconst [index, setIndex] = useState(0);\n\tconst [correct, setCorrect] = useState(0);\n\tconst [error, setError] = useState(false);\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\tconst [quiz, setQuiz] = useState({\n\t\tamount: 10,\n\t\tcategory: 'sports',\n\t\tdifficulty: 'easy'\n\t});\n\n\tconst nextQuestion = () => {\n\t\tsetIndex((oldIndex) => {\n\t\t\tconst index = oldIndex + 1;\n\t\t\tif (index > questions.length - 1) {\n\t\t\t\topenModal();\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn index;\n\t\t});\n\t};\n\n\tconst checkAnswer = (value) => {\n\t\tif (value) {\n\t\t\tsetCorrect((oldState) => oldState + 1);\n\t\t}\n\n\t\tnextQuestion();\n\t};\n\n\tconst openModal = () => {\n\t\tsetIsModalOpen(true);\n\t};\n\n\tconst closeModal = () => {\n\t\tsetIsModalOpen(false);\n\t\tsetWaiting(true);\n\t};\n\n\tconst fetchQuestions = async (url) => {\n\t\tsetIsLoading(true);\n\t\tsetWaiting(false);\n\t\tconst response = await axios(url).catch((e) => console.log(e));\n\n\t\tif (response) {\n\t\t\tconst data = response.data.results;\n\t\t\tconsole.log(data);\n\t\t\tif (data.length > 0) {\n\t\t\t\tsetQuestions(data);\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tsetWaiting(false);\n\t\t\t\tsetError(false);\n\t\t\t} else {\n\t\t\t\tsetWaiting(true);\n\t\t\t\tsetError(true);\n\t\t\t}\n\t\t} else {\n\t\t\tsetWaiting(true);\n\t\t}\n\t};\n\n\tconst handleChange = (e) => {\n\t\tconst name = e.target.name;\n\t\tconst value = e.target.value;\n\t\tsetQuiz({ ...quiz, [name]: value });\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst { amount, category, difficulty } = quiz;\n\t\tconst url = `${API_ENDPOINT}amount=${amount}&category=${table[category]}&difficulty=${difficulty}&type=multiple`;\n\n\t\tfetchQuestions(url);\n\t};\n\n\treturn (\n\t\t<AppContext.Provider\n\t\t\tvalue={{\n\t\t\t\twaiting,\n\t\t\t\tisLoading,\n\t\t\t\tquestions,\n\t\t\t\tindex,\n\t\t\t\tcorrect,\n\t\t\t\terror,\n\t\t\t\tisModalOpen,\n\t\t\t\tnextQuestion,\n\t\t\t\tcheckAnswer,\n\t\t\t\tcloseModal,\n\t\t\t\tquiz,\n\t\t\t\thandleChange,\n\t\t\t\thandleSubmit\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</AppContext.Provider>\n\t);\n};\n// make sure use\nexport const useGlobalContext = () => {\n\treturn useContext(AppContext);\n};\n\nexport { AppContext, AppProvider };\n","import React from 'react';\nimport { useGlobalContext } from './context';\n\nconst SetupForm = () => {\n\tconst { quiz, handleChange, handleSubmit, error } = useGlobalContext();\n\treturn (\n\t\t<main>\n\t\t\t<section className=\"quiz quiz-small\">\n\t\t\t\t<form className=\"setup-form\">\n\t\t\t\t\t<h2>setup quiz</h2>\n\n\t\t\t\t\t{/* amount */}\n\t\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t\t<label htmlFor=\"amount\">number of questions</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"form-input\"\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tmax={50}\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname=\"amount\"\n\t\t\t\t\t\t\tid=\"amount\"\n\t\t\t\t\t\t\tvalue={quiz.amount}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* category */}\n\t\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t\t<label htmlFor=\"category\">category</label>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\tid=\"category\"\n\t\t\t\t\t\t\tclassName=\"form-input\"\n\t\t\t\t\t\t\tvalue={quiz.category}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value=\"sports\">sports</option>\n\t\t\t\t\t\t\t<option value=\"history\">history</option>\n\t\t\t\t\t\t\t<option value=\"politics\">politics</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* difficulty */}\n\t\t\t\t\t<div className=\"form-control\">\n\t\t\t\t\t\t<label htmlFor=\"difficulty\">difficulty</label>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tname=\"difficulty\"\n\t\t\t\t\t\t\tid=\"difficulty\"\n\t\t\t\t\t\t\tclassName=\"form-input\"\n\t\t\t\t\t\t\tvalue={quiz.difficulty}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value=\"easy\">easy</option>\n\t\t\t\t\t\t\t<option value=\"medium\">medium</option>\n\t\t\t\t\t\t\t<option value=\"hard\">hard</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{error && <p className=\"error\">can't generate questions. please try different options</p>}\n\t\t\t\t\t<button className=\"submit-btn\" type=\"submit\" onClick={handleSubmit}>\n\t\t\t\t\t\tsubmit\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</section>\n\t\t</main>\n\t);\n};\n\nexport default SetupForm;\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <main>\n      <div className='loading'></div>\n    </main>\n  )\n}\n\nexport default Loading\n","import React from 'react';\nimport { useGlobalContext } from './context';\n\nconst Modal = () => {\n\tconst { isModalOpen, closeModal, correct, questions } = useGlobalContext();\n\treturn (\n\t\t<div className={`${isModalOpen ? 'modal-container isOpen' : 'modal-container'}`}>\n\t\t\t<div className=\"modal-content\">\n\t\t\t\t<h2>congrats</h2>\n\t\t\t\t<p>You answered {((correct / questions.length) * 100).toFixed(0)}% of questions correctly</p>\n\t\t\t\t<button onClick={closeModal} className=\"close-btn\">\n\t\t\t\t\tplay again\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Modal;\n","import React from 'react';\nimport { useGlobalContext } from './context';\n\nimport SetupForm from './SetupForm';\nimport Loading from './Loading';\nimport Modal from './Modal';\nfunction App() {\n\tconst { waiting, isLoading, questions, index, correct, nextQuestion, checkAnswer } = useGlobalContext();\n\n\tif (waiting) {\n\t\treturn <SetupForm />;\n\t}\n\tif (isLoading) {\n\t\treturn <Loading />;\n\t}\n\n\tconst { question, incorrect_answers, correct_answer } = questions[index];\n\n\tlet answers = [...incorrect_answers];\n\tconst tempIndex = Math.floor(Math.random() * 4);\n\tif (tempIndex === 3) {\n\t\tanswers.push(correct_answer);\n\t} else {\n\t\tanswers.push(answers[tempIndex]);\n\t\tanswers[tempIndex] = correct_answer;\n\t}\n\treturn (\n\t\t<main>\n\t\t\t<Modal />\n\t\t\t<section className=\"quiz\">\n\t\t\t\t<p className=\"correct-answers\">\n\t\t\t\t\tcorrect answers: {correct}/{index}\n\t\t\t\t</p>\n\t\t\t\t<article className=\"container\">\n\t\t\t\t\t<h2 dangerouslySetInnerHTML={{ __html: question }} />\n\t\t\t\t\t<div className=\"btn-container\">\n\t\t\t\t\t\t{answers.map((answer, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonClick={() => checkAnswer(correct_answer === answer)}\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tclassName=\"answer-btn\"\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: answer }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</article>\n\t\t\t\t<button onClick={nextQuestion} className=\"next-question\">\n\t\t\t\t\tnext question\n\t\t\t\t</button>\n\t\t\t</section>\n\t\t</main>\n\t);\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}